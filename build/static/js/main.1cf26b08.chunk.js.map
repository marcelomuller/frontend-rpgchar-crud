{"version":3,"sources":["components/System.js","components/Table.js","components/Header.js","App.js","index.js"],"names":["System","React","useState","name","setName","age","setAge","race","setRace","job","setJob","weapon","setWeapon","nameRef","useRef","ageRef","raceRef","jobRef","weaponRef","className","htmlFor","id","type","ref","onChange","target","value","required","onClick","test","Axios","post","alert","current","Table","charList","setCharList","useEffect","getCharList","a","get","response","data","updateValues","newName","prompt","newAge","newRace","newJob","newWeapon","put","map","char","_id","deleteChar","delete","filter","index","Header","to","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cf26b08.chunk.js","sourcesContent":["import React from 'react';\r\nimport Axios from 'axios';\r\n\r\nconst System = () => {\r\n  const [name, setName] = React.useState('');\r\n  const [age, setAge] = React.useState(0);\r\n  const [race, setRace] = React.useState('');\r\n  const [job, setJob] = React.useState('');\r\n  const [weapon, setWeapon] = React.useState('');\r\n  const nameRef = React.useRef();\r\n  const ageRef = React.useRef();\r\n  const raceRef = React.useRef();\r\n  const jobRef = React.useRef();\r\n  const weaponRef = React.useRef();\r\n\r\n  const addChar = () => {\r\n    if (\r\n      !name ||\r\n      !age ||\r\n      !race ||\r\n      !job ||\r\n      !weapon ||\r\n      /^\\s*$/.test(name, age, race, job, weapon)\r\n    ) {\r\n      alert('Insert valid data.');\r\n      return;\r\n    }\r\n\r\n    Axios.post('https://mern-rpgchar.herokuapp.com/insert', {\r\n      name: name,\r\n      age: age,\r\n      race: race,\r\n      job: job,\r\n      weapon: weapon,\r\n    });\r\n    alert('Character created successfully!');\r\n    nameRef.current.value = '';\r\n    ageRef.current.value = '';\r\n    raceRef.current.value = '';\r\n    jobRef.current.value = '';\r\n    weaponRef.current.value = '';\r\n  };\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <h1>RPG Char Creator</h1>\r\n      <form className=\"input-wrapper\">\r\n        <label htmlFor=\"name\">Name:</label>\r\n        <input\r\n          id=\"name\"\r\n          type=\"text\"\r\n          ref={nameRef}\r\n          onChange={({ target }) => setName(target.value)}\r\n          required\r\n        />\r\n        <label htmlFor=\"age\">Age:</label>\r\n        <input\r\n          id=\"age\"\r\n          type=\"number\"\r\n          ref={ageRef}\r\n          onChange={({ target }) => setAge(target.value)}\r\n          required\r\n        />\r\n        <label htmlFor=\"race\">Race:</label>\r\n        <input\r\n          id=\"race\"\r\n          type=\"text\"\r\n          ref={raceRef}\r\n          onChange={({ target }) => setRace(target.value)}\r\n          required\r\n        />\r\n        <label htmlFor=\"job\">Job:</label>\r\n        <input\r\n          id=\"job\"\r\n          type=\"text\"\r\n          ref={jobRef}\r\n          onChange={({ target }) => setJob(target.value)}\r\n          required\r\n        />\r\n        <label htmlFor=\"weapon\">Weapon:</label>\r\n        <input\r\n          id=\"weapon\"\r\n          type=\"text\"\r\n          ref={weaponRef}\r\n          onChange={({ target }) => setWeapon(target.value)}\r\n          required\r\n        />\r\n      </form>\r\n      <button className=\"btn\" onClick={addChar}>\r\n        Create\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default System;\r\n","import React from 'react';\r\nimport Axios from 'axios';\r\n\r\nconst Table = () => {\r\n  const [charList, setCharList] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    const getCharList = async () => {\r\n      const response = await Axios.get('https://mern-rpgchar.herokuapp.com/read');\r\n      setCharList(response.data);\r\n    };\r\n    getCharList();\r\n  }, []);\r\n\r\n  const updateValues = async (id) => {\r\n    const newName = prompt('Enter new name:');\r\n    const newAge = prompt('Enter new age:');\r\n    const newRace = prompt('Enter new race:');\r\n    const newJob = prompt('Enter new job:');\r\n    const newWeapon = prompt('Enter new weapon:');\r\n\r\n    if (\r\n      !newName ||\r\n      !newAge ||\r\n      !newRace ||\r\n      !newJob ||\r\n      !newWeapon ||\r\n      /^\\s*$/.test(newName, newAge, newRace, newJob, newWeapon)\r\n    ) {\r\n      alert('Invalid data.');\r\n      return;\r\n    }\r\n\r\n    await Axios.put('https://mern-rpgchar.herokuapp.com/update', {\r\n      id: id,\r\n      newName: newName,\r\n      newAge: newAge,\r\n      newRace: newRace,\r\n      newJob: newJob,\r\n      newWeapon: newWeapon,\r\n    });\r\n\r\n    setCharList(\r\n      charList.map((char) => {\r\n        return char._id === id\r\n          ? {\r\n              id: id,\r\n              name: newName,\r\n              age: newAge,\r\n              race: newRace,\r\n              job: newJob,\r\n              weapon: newWeapon,\r\n            }\r\n          : char;\r\n      })\r\n    );\r\n  };\r\n\r\n  const deleteChar = async (id) => {\r\n    await Axios.delete(`https://mern-rpgchar.herokuapp.com/delete/${id}`);\r\n    setCharList(charList.filter((char) => char._id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"char-list\">\r\n      <h1>Char List</h1>\r\n      {charList.map((char, index) => (\r\n        <div className=\"char\" key={index}>\r\n          <h3>\r\n            Name: <span>{char.name}</span>\r\n          </h3>\r\n          <h4>\r\n            Age: <span>{char.age}</span>\r\n          </h4>\r\n          <h4>\r\n            Race: <span>{char.race}</span>\r\n          </h4>\r\n          <h4>\r\n            Job: <span>{char.job}</span>\r\n          </h4>\r\n          <h4>\r\n            Weapon: <span>{char.weapon}</span>\r\n          </h4>\r\n          <div key={index} className=\"char-btns\">\r\n            <button onClick={() => updateValues(char._id)}>Update</button>\r\n            <button onClick={() => deleteChar(char._id)}>Delete</button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <ul>\r\n        <li>\r\n          <NavLink className=\"navlink\" to=\"/\">\r\n            Create\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink className=\"navlink\" to=\"chars\">\r\n            Show\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport System from './components/System';\nimport Table from './components/Table';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Header />\n        <Routes>\n          <Route path=\"/\" element={<System />} />\n          <Route path=\"/chars\" element={<Table />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}